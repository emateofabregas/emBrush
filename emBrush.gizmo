#! C:/Program Files/Nuke15.2v3/nuke-15.2.3.dll -nx
version 15.2 v3
Gizmo {
 inputs 2
 tile_color 0xbc6e14ff
 addUserKnob {20 User l emBrush}
 addUserKnob {4 viewMode l "view mode" M {"Final Output" "Mask Effect" "Brush Effect"}}
 addUserKnob {26 ""}
 addUserKnob {26 text0 l "@b;Alpha" T " "}
 addUserKnob {6 usingLuminance l "Using Luminance" -STARTLINE}
 addUserKnob {41 range T Keyer11.range}
 addUserKnob {26 ""}
 addUserKnob {41 operation T Merge42.operation}
 addUserKnob {41 bbox l "set bbox to " -STARTLINE T Merge42.bbox}
 addUserKnob {26 ""}
 addUserKnob {20 group1 l "@b;Kuwahara Filter" n 1}
 group1 0
 addUserKnob {41 Radius T AnisotropicKuwaharaFilter7.Radius}
 addUserKnob {41 Q T AnisotropicKuwaharaFilter7.Q}
 addUserKnob {41 alpha T AnisotropicKuwaharaFilter7.alpha}
 addUserKnob {41 scale T AnisotropicKuwaharaFilter7.scale}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {41 saturation T Saturation2.saturation}
 addUserKnob {26 ""}
 addUserKnob {41 blackpoint T Grade20.blackpoint}
 addUserKnob {41 whitepoint T Grade20.whitepoint}
 addUserKnob {41 black l lift T Grade20.black}
 addUserKnob {41 white l gain T Grade20.white}
 addUserKnob {41 multiply T Grade20.multiply}
 addUserKnob {41 add l offset T Grade20.add}
 addUserKnob {41 gamma T Grade20.gamma}
 addUserKnob {41 black_clamp l "black clamp" T Grade20.black_clamp}
 addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade20.white_clamp}
 addUserKnob {41 mix_1 l mix T Grade20.mix}
 addUserKnob {26 ""}
 addUserKnob {26 "" l mask T ""}
 addUserKnob {41 maskChannelMask l "" -STARTLINE T Merge42.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge42.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge42.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge42.fringe}
 addUserKnob {41 mix T Merge42.mix}
 addUserKnob {26 ""}
 addUserKnob {26 autor l "" +STARTLINE T "<font color=\"grey\">emBrush v1.0 | emateofabregas.com | 2025 </font>"}
}
 Input {
  inputs 0
  name InputImg
  label 1
  xpos 826
  ypos 200
 }
 Dot {
  name Dot79
  xpos 860
  ypos 265
 }
set N33764000 [stack 0]
 Group {
  name AnisotropicKuwaharaFilter7
  xpos 826
  ypos 319
  addUserKnob {20 AnisotropicKuwaharaFilter}
  addUserKnob {41 "Local GPU: " T BlinkScript2.gpuName}
  addUserKnob {41 "Use GPU if Available" T BlinkScript2.useGPUIfAvailable}
  addUserKnob {26 ""}
  addUserKnob {20 begin l inputs n 1}
  addUserKnob {41 src T BlinkScript2.AnisotropicKuwaharaFilter_src}
  addUserKnob {26 ""}
  addUserKnob {41 Radius T BlinkScript2.AnisotropicKuwaharaFilter_Radius}
  addUserKnob {41 Q T BlinkScript2.AnisotropicKuwaharaFilter_Q}
  addUserKnob {41 alpha T BlinkScript2.AnisotropicKuwaharaFilter_alpha}
  addUserKnob {41 scale T BlinkScript2.AnisotropicKuwaharaFilter_scale}
  addUserKnob {26 ""}
  addUserKnob {41 output T BlinkScript2.outputChannels}
  addUserKnob {26 gap0 l " " T " "}
  addUserKnob {26 ""}
  addUserKnob {26 autor l "" +STARTLINE T "Autor: Michael Levin: https://github.com/michaellevin\n"}
 }
  Input {
   inputs 0
   name src
   xpos 76
   ypos 5
  }
  BlinkScript {
   kernelSourceFile D:/Sink/_external_tools/kuwahara-filter-nuke-main/kuwahara_filter_buffer_D.blink
   recompileCount 3
   ProgramGroup 1
   KernelDescription "3 \"AnisotropicKuwaharaFilter\" iterate pixelWise 5af1b3a3be570d8831309cefd448915d8011c79d2df4bdb69eae2e0f011d754e 2 \"src\" Read Random \"dst\" Write Point 4 \"Radius\" Int 1 DwAAAA== \"Q\" Float 1 AABAQQ== \"alpha\" Float 1 AACgQA== \"scale\" Float 1 AACAPw== 4 \"radius\" 1 1 Default \"q\" 1 1 Default \"alpha\" 1 1 Default \"scale\" 1 1 Default 2 \"width\" Float 1 1 AAAAAA== \"height\" Float 1 1 AAAAAA=="
   kernelSource "kernel AnisotropicKuwaharaFilter : ImageComputationKernel<ePixelWise>\n\{\n    Image<eRead, eAccessRandom, eEdgeClamped> src; // Input image\n    Image<eWrite> dst; // Output image\n\n    param:\n        int radius; // Radius of the filter\n        float q;\n        float alpha;\n        float scale;\n\n    local:\n        float width;\n        float height;\n\n    void define() \{\n        defineParam(radius, \"Radius\", 15); \n        defineParam(q, \"Q\", 12.0f); \n        defineParam(alpha, \"alpha\", 5.0f); \n        defineParam(scale, \"scale\", 1.0f); \n    \}\n\n    void init() \{\n        width = src.bounds.x2;\n        height = src.bounds.y2;\n    \}\n\n    void process(int2 pos) \{\n        SampleType(src) input = src(pos.x, pos.y);\n        float2 uv = float2(pos.x / float(width), pos.y / float(height));\n\n        float4 m\[4];\n        float4 s\[4];\n        \n        for (int k = 0; k < 4; ++k) \{\n            m\[k] = float4(0.0f, 0.0f, 0.0f, 0.0f);\n            s\[k] = float4(0.0f, 0.0f, 0.0f, 0.0f);\n        \}\n        float piN = 2.0f * PI / 4.0f;\n        \n        \n        float tw = 1.0f; // place texture reading here Alpha channel\n        float a = radius * clamp((alpha + tw) / alpha, 0.1, 2.0); \n        float b = radius * clamp(alpha / (alpha + tw), 0.1, 2.0);\n\n        float tz = 0.0f;\n        float cos_phi = cos(tz); // 1\n        float sin_phi = sin(tz); // 0\n\n        float4 SR = float4(cos_phi/a, -sin_phi/b, \n                            sin_phi/a, cos_phi/b); \n\n        int max_x = int(sqrt(a*a * cos_phi*cos_phi +\n                            b*b * sin_phi*sin_phi));\n        int max_y = int(sqrt(a*a * sin_phi*sin_phi +\n                            b*b * cos_phi*cos_phi));\n        float real_scale = clamp(pow(scale,2), 0.05, 1.0); // TEST\n        for (int j = 0; j <= max_y; ++j) \{\n            for (int i = -max_x; i <= max_x; ++i) \{\n                if ((j != 0) || (i > 0)) \{\n                    // float2 v = float2(float(i), float(j));\n                    float2 v = float2(\n                        SR\[0]*float(i) + SR\[1]*float(j),\n                        SR\[2]*float(i) + SR\[3]*float(j));\n                    float dot_v = dot(v, v);\n                    if (dot_v <= real_scale) \{\n                        int2 coord0 = int2(uv.x * width + i, uv.y * height + j);\n                        int2 coord1 = int2(uv.x * width - i, uv.y * height - j);\n\n                        float4 c0_fix = src(coord0.x, coord0.y);\n                        float3 c0 = float3(c0_fix.x, c0_fix.y, c0_fix.z);\n                        float4 c1_fix = src(coord1.x, coord1.y);\n                        float3 c1 = float3(c1_fix.x, c1_fix.y, c1_fix.z);\n\n                        float3 cc0 = c0 * c0;\n                        float3 cc1 = c1 * c1;\n\n                        float n = 0.0f;\n                        float wx\[4];\n                        \n                        float z;\n                        float xx = 0.33f - 0.84f * v.x * v.x;\n                        float yy = 0.33f - 0.84f * v.y * v.y;\n\n                        z = max(0.0f, v.y + xx);\n                        n += wx\[0] = z * z;\n\n                        z = max(0.0f, -v.x + yy);\n                        n += wx\[1] = z * z;\n\n                        z = max(0.0f, -v.y + xx);\n                        n += wx\[2] = z * z;\n\n                        z = max(0.0f, v.x + yy);\n                        n += wx\[3] = z * z;\n                        \n\n                        float g = exp(-3.125f * dot_v) / n;\n                        for (int k = 0; k < 4; ++k) \{\n                            float w = wx\[k] * g;\n                            m\[k] += float4(c0.x * w, c0.y * w, c0.z * w, w);\n                            // Extend cc0 and cc1 to float4 by adding a default fourth component, here I use 0.0f\n                            s\[k] += float4(cc0.x * w, cc0.y * w, cc0.z * w, 0.0f);\n                            m\[(k + 2) & 3] += float4(c1.x * w, c1.y * w, c1.z * w, w);\n                            s\[(k + 2) & 3] += float4(cc1.x * w, cc1.y * w, cc1.z * w, 0.0f);\n                        \}\n                    \}\n                \}\n            \}\n        \}\n        \n        float4 o = float4(0.0f, 0.0f, 0.0f, 0.0f);\n        for (int k = 0; k < 4; ++k) \{\n            m\[k].x /= m\[k].w;\n            m\[k].y /= m\[k].w;\n            m\[k].z /= m\[k].w;\n\n            float4 temp = s\[k] / m\[k].w - float4(m\[k].x * m\[k].x, m\[k].y * m\[k].y, m\[k].z * m\[k].z, 0.0f);\n            s\[k] = float4(fabs(temp.x), fabs(temp.y), fabs(temp.z), fabs(temp.w));\n            \n            float sigma2 = sqrt(s\[k].x) + sqrt(s\[k].y) + sqrt(s\[k].z);\n            float w =1.0f / (1.0f + pow(255.0f * sigma2, q)); \n\n            // Accumulate the result in o\n            o += float4(m\[k].x * w, m\[k].y * w, m\[k].z * w, w);\n        \}\n\n        dst() = float4(o.x / o.w, o.y / o.w, o.z / o.w, 1.0f);\n        // dst() = input;\n    \}\n\n\};\n"
   rebuild ""
   rebuild_finalise ""
   name BlinkScript2
   xpos 76
   ypos 55
  }
  Output {
   name Output1
   xpos 76
   ypos 145
  }
 end_group
set N33756700 [stack 0]
 Grade {
  name Grade20
  label "<b>mix:\[value mix]"
  xpos 826
  ypos 367
 }
 Saturation {
  name Saturation2
  label "<b>mix: \[value mix]"
  xpos 826
  ypos 444
 }
set N33783e00 [stack 0]
 Dot {
  name Dot3
  xpos 731
  ypos 598
 }
 Input {
  inputs 0
  name InputMask
  label 2
  xpos 1201
  ypos 425
  number 1
 }
push $N33764000
 Dot {
  name Dot80
  xpos 1091
  ypos 265
 }
 Keyer {
  operation "luminance key"
  range {0.02349056842 0.06312971899 1 1}
  name Keyer11
  xpos 1057
  ypos 304
 }
push $N33756700
 Keyer {
  operation "luminance key"
  range {{parent.Keyer11.range} {parent.Keyer11.range} {parent.Keyer11.range} {parent.Keyer11.range}}
  name Keyer1
  xpos 943
  ypos 318
 }
 Switch {
  inputs 2
  which {{parent.usingLuminance}}
  name Switch2
  xpos 1057
  ypos 374
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge1
  xpos 1057
  ypos 419
  disable {{"!\[exists parent.input2]"}}
 }
 Dot {
  name Dot81
  xpos 1091
  ypos 529
 }
set N33765000 [stack 0]
 Shuffle2 {
  fromInput1 {
   {0}
   B
  }
  in1 alpha
  fromInput2 {
   {0}
   B
  }
  mappings "4 rgba.alpha 0 0 rgba.alpha 0 3 rgba.alpha 0 0 rgba.blue 0 2 rgba.alpha 0 0 rgba.green 0 1 rgba.alpha 0 0 rgba.red 0 0"
  name Shuffle1
  label "\[value in1]"
  xpos 1057
  ypos 589
 }
push $N33765000
push $N33783e00
push $N33764000
 Dot {
  name Dot2
  xpos 695
  ypos 265
 }
 Dot {
  name Dot1
  xpos 695
  ypos 529
 }
 Merge2 {
  inputs 2+1
  operation max
  name Merge42
  label "<b>mix:\[value mix]"
  xpos 826
  ypos 515
 }
 Switch {
  inputs 3
  which {{parent.viewMode}}
  name Switch1
  label "\[value which]"
  xpos 826
  ypos 589
 }
 Output {
  name Output1
  xpos 826
  ypos 652
 }
end_group
